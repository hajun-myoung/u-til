(self.webpackChunkuntil=self.webpackChunkuntil||[]).push([[379],{3261:(s,n,e)=>{"use strict";e.r(n),e.d(n,{data:()=>a});const a={key:"v-6450bd8c",path:"/tech/blog/vuepress/rfv_errors.html",title:"몇 가지 오류와 대처",lang:"ko-KR",frontmatter:{},excerpt:"",headers:[{level:2,title:"파워쉘 보안 문제",slug:"파워쉘-보안-문제",children:[{level:3,title:"문제 상황",slug:"문제-상황",children:[]},{level:3,title:"원인",slug:"원인",children:[]},{level:3,title:"해결",slug:"해결",children:[]}]},{level:2,title:"베이스 루트 문제",slug:"베이스-루트-문제",children:[{level:3,title:"문제 상황",slug:"문제-상황-1",children:[]},{level:3,title:"원인",slug:"원인-1",children:[]},{level:3,title:"해결",slug:"해결-1",children:[]},{level:3,title:"참고",slug:"참고",children:[]}]},{level:2,title:"특정 파일의 추가",slug:"특정-파일의-추가",children:[{level:3,title:"상황 및 가정",slug:"상황-및-가정",children:[]},{level:3,title:"흐름",slug:"흐름",children:[]},{level:3,title:"수정",slug:"수정",children:[]}]},{level:2,title:"텍스트 깨짐 문제(인코딩 문제)",slug:"텍스트-깨짐-문제-인코딩-문제",children:[{level:3,title:"문제 상황",slug:"문제-상황-2",children:[]},{level:3,title:"원인",slug:"원인-2",children:[]},{level:3,title:"해결",slug:"해결-2",children:[]}]}],filePathRelative:"tech/blog/vuepress/rfv_errors.md",git:{updatedTime:1619739346e3}}},5026:(s,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>P});var a=e(6252);const l=(0,a.uE)('<h1 id="몇-가지-오류와-대처"><a class="header-anchor" href="#몇-가지-오류와-대처">#</a> 몇 가지 오류와 대처</h1><p>이 문서는 뷰프레스 프레임워크를 사용하여 블로그를 작성하면서, 맞닥뜨렸던 오류들을 적은 문서입니다.<br> 다음의 것들을 신경쓰려고 했어요:</p><ul><li>오류 상황</li><li>원인</li><li>해결</li></ul><p>부디, 당신이 겪고 있는 &#39;알 수 없는 오류&#39;가 이 문서에서 해결된 것들 중에 있기를 바라요. ✊</p><h2 id="파워쉘-보안-문제"><a class="header-anchor" href="#파워쉘-보안-문제">#</a> 파워쉘 보안 문제</h2><h3 id="문제-상황"><a class="header-anchor" href="#문제-상황">#</a> 문제 상황</h3><p>저는 cmd 대신 파워쉘로 npm, yarn 등을 설치하고 작업했어요.<br> yarn 설치까지는 성공했는데, 설치 확인을 위해 <code>yarn -version</code>을 명령하니,</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token builtin class-name">:</span> 이 시스템에서 스크립트를 실행할 수 없으므로\nC:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>Administrator<span class="token punctuation">\\</span>AppData<span class="token punctuation">\\</span>Roaming<span class="token punctuation">\\</span>npm<span class="token punctuation">\\</span>yarn.ps1 파일을 로드할 수 없습니다.\n자세한 내용은 about_Execution_Policies<span class="token punctuation">(</span>https://go.microsoft.com/fwlink/?LinkID<span class="token operator">=</span><span class="token number">135170</span><span class="token punctuation">)</span>\n를 참조하십시오.\n\n위치 줄:1 문자:1 + <span class="token function">yarn</span> -v + ~~~~ + CategoryInfo\n<span class="token builtin class-name">:</span> 보안 오류: <span class="token punctuation">(</span>:<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>, PSSecurityException + FullyQualifiedErrorId <span class="token builtin class-name">:</span> UnauthorizedAccess\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',8),t=(0,a.Uk)("이렇게 '실행할 수 없다'는 오류를 격었고, "),i={href:"https://extbrain.tistory.com/118",target:"_blank",rel:"noopener noreferrer"},p=(0,a.Uk)("확장형 뇌 저장소님의 글"),c=(0,a.Uk)("을 따라해 해결어요."),r=(0,a.uE)('<h3 id="원인"><a class="header-anchor" href="#원인">#</a> 원인</h3><p><strong>파워쉘이 보안 문제를 이유로 yarn이 무언가를 실행할 수 없게 막은 것</strong> 이에요.<br> 보안에 퍽 까다로운 윈도우가 주는 숙제들 중 하나 쯤 되겠네요.</p><h3 id="해결"><a class="header-anchor" href="#해결">#</a> 해결</h3><ol><li>먼저, 파워쉘을 <strong>관리자 권한</strong> 으로 실행해 줍니다.</li><li>다음의 명령어를 입력해, 파워쉘 정책이 yarn을 제한시키는지 아닌지 알아봅니다.</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ ExecutionPolicy\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>(대소문자는 중요하지 않아요)</p>',6),o=(0,a.Uk)("아래 그림처럼 'Restricted'라고 뜨면, 보안 정책 문제가 맞습니다."),u=(0,a.Wm)("br",null,null,-1),d=(0,a.uE)('<ol start="3"><li>이제 보안 정책을 풀어줍니다.</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ Set-ExecutionPolicy unRestricted\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2),m=(0,a.Uk)("중간에 정말 변경할 건지 묻는 질문에 'y'로 동의해주시는 거 잊지 말구요."),h=(0,a.Wm)("br",null,null,-1),b=(0,a.uE)('<ol start="4"><li>확인해봅니다.</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ ExecutionPolicy\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2),g=(0,a.uE)('<p>다 하셨다면, <code>yarn -version</code>을 명령해 문제가 해결되었는지 확인해보세요.</p><h2 id="베이스-루트-문제"><a class="header-anchor" href="#베이스-루트-문제">#</a> 베이스 루트 문제</h2><p>이 문제의 경우, <code>dev</code> 명령은 정상적이고, <code>build</code>는 의도대로 일하지 않아요.</p><div class="custom-container warning"><p class="custom-container-title">이런 경우(dev는 정상이지만, build는 실패하는 경우)는 많아요.</p><p>여기서 작성한 베이스 루트 문제 외에도 여러 가지 이유로 build만 실패할 수 있어요.<br> 따라서, dev는 정상인데 build를 실패했다고 해 베이스 루트 문제일것이라고 해석하기에는 무리가 커요.</p></div><h3 id="문제-상황-1"><a class="header-anchor" href="#문제-상황-1">#</a> 문제 상황</h3><p><code>yarn dev</code> 명령에서는 문제 없이 의도한 페이지가 구성되는데 <code>yarn build</code>에서는 레이아웃이 완전히 깨진(기본 테마가 전혀 적용되지 않은) 결과물이 출력됩니다. 제 경우, 세 개의 검정 사각형이 반기는 페이지가 구성되었어요.</p>',6),v=(0,a.Wm)("p",null,"해당 페이지가 빌드 실패가 아닌 '레이아웃의 깨짐'이라고 판단한 건, 페이지를 이루고 있는 내용들은 작성한 내용 그대로 출력되었기 때문이에요. 그러나 기본 테마도, 내용 정리도 이루어지지 않은 이상하게 날것인 html 파일의 모습을 하고있어요.",-1),k=(0,a.Wm)("h3",{id:"원인-1"},[(0,a.Wm)("a",{class:"header-anchor",href:"#원인-1"},"#"),(0,a.Uk)(" 원인")],-1),f=(0,a.Wm)("p",null,[(0,a.Uk)("뷰프레스 블로그를 구성하다보면, config 파일에 "),(0,a.Wm)("code",null,"base="),(0,a.Uk)("를 지정하는 파트가 있어요."),(0,a.Wm)("br"),(0,a.Uk)(" 베이스는 '여러분의 블로그가 시작되는 기반 주소'를 의미하고, 제 블로그의 경우 "),(0,a.Wm)("code",null,"/until/"),(0,a.Uk)(" 이 여기에 해당되죠. "),(0,a.Wm)("strong",null,"이 베이스 주소는, 레포지토리 이름과 일치하거나 없어야 한다는 점 주의하시기 바랍니다.")],-1),W=(0,a.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-javascript"},[(0,a.Wm)("code",null,[(0,a.Uk)("base"),(0,a.Wm)("span",{class:"token operator"},"="),(0,a.Wm)("span",{class:"token string"},"'/until/'"),(0,a.Uk)("\n")])]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br")])],-1),y=(0,a.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-javascript"},[(0,a.Wm)("code",null,[(0,a.Uk)("base"),(0,a.Wm)("span",{class:"token operator"},"="),(0,a.Wm)("span",{class:"token string"},"'/'"),(0,a.Uk)("\n")])]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br")])],-1),x=(0,a.uE)('<div class="custom-container tip"><p class="custom-container-title">베이스가 없는 경우와 있는 경우의 차이</p><p>없다면 <code>&lt;username&gt;.github.io/</code> 에 블로그가 deploying 되고,<br> 베이스를 지정했다면 <code>&lt;username&gt;.github.io/&lt;base&gt;/</code>에 블로그가 deploying 됩니다.</p></div><h3 id="해결-1"><a class="header-anchor" href="#해결-1">#</a> 해결</h3><p>오타였어요.</p><p>당시 레포지토리 이름은 studyB 였고, 다음과 같이 수정했어요:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token punctuation">{</span>\n    base <span class="token operator">:</span> <span class="token string">&#39;/studyb/&#39;</span><span class="token punctuation">,</span>\n    <span class="token operator">~</span><span class="token operator">~</span><span class="token operator">~</span>\n   <span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token punctuation">{</span>\n    base <span class="token operator">:</span> <span class="token string">&#39;/studyB/&#39;</span><span class="token punctuation">,</span>\n    <span class="token operator">~</span><span class="token operator">~</span><span class="token operator">~</span>\n   <span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>네 맞아요. 베이스 루트는 무려 대소문자를 구분해요.</p><div class="custom-container tip"><p class="custom-container-title">이 오류를 해결하면서</p><p>아, 이래서 레포지토리 이름에 대문자를 쓰지 말라고 하는구나...하고<br> 깨달으며 레포지토리 이름을 &#39;study_b&#39;로 바꾸게 되었죠.</p></div><details class="custom-container details"><summary>이 블로그의 이름은 study_b가 아니라 until 아닌가요?</summary><p>아 죄송해요, 혼선을 드렸네요. study_b는 이전 vuepress 1 framework를 이용할 당시의 블로그 이름이에요. 지금은 vuepress 2 framework를 이용중이구요.</p></details><h3 id="참고"><a class="header-anchor" href="#참고">#</a> 참고</h3>',10),U=(0,a.Uk)("뷰프레스 테마가 적용되지 않고 세 개의 검은 사각형으로 페이지가 시작되는 오류는 다양한 원인을 가지고 있어요. 여기서 서술한 원인도, 여러가지 경우 중 하나일 뿐이죠. vuejs 공식 깃허브에서도 "),w={href:"https://github.com/vuejs/vuepress/issues/575",target:"_blank",rel:"noopener noreferrer"},E=(0,a.Uk)("'Three black rectangle' 이 나온다는 이슈"),_=(0,a.Uk)("가 꽤 흔해요ㅋㅋ"),j=(0,a.uE)('<blockquote><p>참고로, 저 링크에 있는 이슈는 이 오류를 해결하는 데 아무런 도움이 되지 않았습니다 😬</p></blockquote><h2 id="특정-파일의-추가"><a class="header-anchor" href="#특정-파일의-추가">#</a> 특정 파일의 추가</h2><p>오류는 아니에요. 말 그대로 블로그를 deploying 할 때 &#39;내가 원하는 파일을 추가하고 싶어서&#39; 시도한 내용이죠. 생각보다 쉽고, 꽤 유용해요. 주로 이런 경우에 적용 가능하죠:</p><ol><li>구글 서치 콘솔 소유권 증명을 위한 .html 파일 작성</li><li>작성된 사이트맵을 build 결과물에 포함되게끔 설정</li><li>특정한 목적을 가진 페이지(ex: 404.html)의 임의포함</li><li>블로그 문서에 필요한 파일을 임의추가 <ul><li>뷰프레스가 지원하지 않는 파일이더라도 추가하고 링크를 걸어 사용가능</li></ul></li></ol><h3 id="상황-및-가정"><a class="header-anchor" href="#상황-및-가정">#</a> 상황 및 가정</h3><ul><li><p>상황</p><ul><li>블로그 베이스 루트 주소(~/until/)에 <code>src.file</code> 이라는 파일이 있다고 할게요.</li><li>이 파일을 매번 블로그를 deploying할 때 <code>~/until/target/</code>에 포함시키고 싶어요.</li></ul></li><li><p>가정</p><ul><li>앞으로 설명할 방법은 쉘 명령을 이용한 방법이에요.</li><li>따라서, <code>deploy.sh</code>파일을 이용한 반자동 deploying을 쓰시는 분들이 사용하기 편할거에요.</li></ul></li></ul><h3 id="흐름"><a class="header-anchor" href="#흐름">#</a> 흐름</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">find</span> <span class="token builtin class-name">.</span> -maxdepth <span class="token number">1</span> -name <span class="token string">&quot;src.file&quot;</span> -exec <span class="token function">cp</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> ./target/ <span class="token punctuation">\\</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>이 명령은 &quot;src.file&quot; 이라는 파일을 찾아서, ./target/ 에 복사를 실행하라고 하고 있어요.</p><details class="custom-container details"><summary>-maxdepth 1</summary><p>find 명령은 명령이 실행되는 곳을 기준으로 &#39;모든 하위 디렉토리&#39;를 탐색 대상으로 둬요.<br> 이 옵션을 추가해서 현재 폴더에서만 탐색하게끔 할 수 있어요.</p></details><blockquote><p>구글에 <code>쉘 특정 파일 복사하기</code> 따위로 검색하면 비슷한 표현식들을 많이 찾을 수 있을거에요.</p></blockquote><p>이제 이 명령을 적당한 때에 실행해주면 되는데, &#39;적당한 때&#39;를 찾기 위해서 블로그가 어떤 순서로 deploying되고 있는지를 우선적으로 파악해야 해요.</p><p><strong>반자동 쉘 deploying</strong>을 쓰고 있다면, 다음과 같은 순서를 거치는 게 일반적이에요.</p><ol><li><code>deploy.sh</code>를 실행 <ul><li><code>npm run build</code> (블로그 빌드) <ul><li>빌드 결과물: /dist/</li></ul></li><li>쉘이 /dist/ 폴더에 접근</li><li>/dist/ 폴더에 있는 빌드 결과물을 gh-pages 브랜치로 git push</li></ul></li></ol><p>블로그가 빌드될 때, /dist/에 있는 기존 파일들을 모두 삭제하고 시작해요. 따라서 다음과 같이 순서를 잡아야해요:</p><ol><li><code>npm run build</code></li><li>target.file 복사</li><li>gh-pages 브랜치로 git push</li></ol><p>저는, <code>npm run build</code>와 <code>cd docs/.vuepress/dist</code> 사이에 다음 명령을 위치시켰어요.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> -maxdepth <span class="token number">1</span> -name <span class="token string">&quot;sitemap.xml&quot;</span> -exec <span class="token function">cp</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> ./docs/.vuepress/dist/ <span class="token punctuation">\\</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>이 코드는</p><ol><li>블로그가 빌드</li><li>sitemap.xml 파일을 /dist/ 폴더로 복사</li><li>쉘이 gh-pages 브랜치 푸쉬를 위해 /dist/ 폴더로 움직이게끔 해요.</li></ol><blockquote><p>실행되는 타이밍을 보고, 목적하는 경로를 어디로 둘지, 파일은 어디에 있는지 고민해야해요.</p></blockquote><h3 id="수정"><a class="header-anchor" href="#수정">#</a> 수정</h3><p>복사 대상을 &#39;파일 한 개&#39;에서 &#39;폴더&#39;로 바꾸기 위해, 명령어를 <strong>조금</strong> 수정했어요.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">cp</span> -r TargetDirectory /PasteToHere/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>find</code> 명령어는 폴더를 찾는 것도 무리없이 진행하기 때문에 계속 사용하고자 했지만, 복사에 한계가 있어서<br> 훨씬 편한 <code>cp</code> 명령을 쓰게 되었어요. 위 예시 코드의 cp 명령은 다음과 같은 명령을 수행해요</p><ol><li>현재 경로에서 &#39;TargetDirectory&#39; 폴더를 찾아</li><li>/PasteToHere/에 복사</li></ol><p>이렇게 적용했어요:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># CUSTOM SETTINGS : WROTE BY HAJUN</span>\n\n<span class="token comment"># -maxdepth 1 : for exclude childe folders</span>\n<span class="token builtin class-name">cd</span> docs/src/targetDirectory\n<span class="token comment"># copy&amp;past specific &#39;folder&#39;</span>\n<span class="token function">cp</span> -r examples <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/.vuepress/dist/src/targetDirectory\n<span class="token comment"># go back to the origin directory</span>\n<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/\n\n<span class="token comment"># CUSTOM SETTINGS: END</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="텍스트-깨짐-문제-인코딩-문제"><a class="header-anchor" href="#텍스트-깨짐-문제-인코딩-문제">#</a> 텍스트 깨짐 문제(인코딩 문제)</h2><p>vuepress 2로 블로그를 migration 하기 위해 다시 공식 가이드를 따라가는 중, 아주 머리아프고 알 수 없는 오류를 <strong>또</strong> 만났어요. 그리고 언제나와 같이, <strong>역시나</strong> 윈도우라서 문제가 생겼던 것으로 밝혀겼죠.</p><div class="custom-container tip"><p class="custom-container-title">행복-개발을 하고싶나요?</p><p>일단 당신 앞에 있는 그 윈도우부터 치워버리고 맥북을 사세요.</p></div><h3 id="문제-상황-2"><a class="header-anchor" href="#문제-상황-2">#</a> 문제 상황</h3><p>이 문제는, 블로그를 처음 셋팅할 때 주로 일어나고, <code>dev</code>나 <code>build</code>에 오류는 없지만, 내용 텍스트가 깨져버려요. 예시를 보여드릴게요:</p>',33),T={href:"https://vuepress2.netlify.app/guide/getting-started.html#manual-installation",target:"_blank",rel:"noopener noreferrer"},q=(0,a.Uk)("vuepress2 공식 가이드의 Installation"),$=(0,a.Uk)("를 따라서 파일 생성"),B=(0,a.Wm)("ol",{start:"2"},[(0,a.Wm)("li",null,"정상적으로 생성 완료")],-1),S=(0,a.Wm)("ol",{start:"3"},[(0,a.Wm)("li",null,[(0,a.Wm)("code",null,"build"),(0,a.Uk)("등을 통해 컴파일 및 렌더링 결과, 텍스트 깨짐")])],-1),C=(0,a.uE)('<h3 id="원인-2"><a class="header-anchor" href="#원인-2">#</a> 원인</h3><p><code>echo</code> 명령이 원인이에요.<br> cmd나 파워쉘과 같은 윈도우 cli의 텍스트 인코딩 방식과 웹 표준이 다르다는 문제죠.</p><ul><li>윈도우 표준: <strong>utf-16</strong></li><li>웹 표준: <strong>utf-8</strong></li></ul><p>즉, 윈도우는 <code>echo</code> 명령을 내리면 utf-16으로 인코딩 된 텍스트를 파일에 넣어줍니다.<br> 뷰프레스 프레임워크는 이 텍스트를 웹 표준인 utf-8로 인코딩해서 <code>.html</code> 파일을 만들기 때문에, 텍스트가 깨지는 것이죠.</p><h3 id="해결-2"><a class="header-anchor" href="#해결-2">#</a> 해결</h3><p>VScode를 쓰시나요? 거기서 파일을 만들면 해결돼요.</p><details class="custom-container details"><summary>웹 페이지 인코딩 방식을 바꾸는 크롬 플러그인을 설치해도 소용 없어요.</summary><p>구글에 검색하니 인코딩이 달라서 텍스트가 깨지는 거니, 인코딩 방식을 다르게 해서 읽어내는 플러그인을 사용해보라고 하더라구요. 하지만 이 문제는, 애초에 파워쉘이 utf-16으로 인코딩된 파일을 줘서, 웹팩이 컴파일하면서 텍스트가 깨진거에요. <code>build</code> 후에 <code>/docs/.vuepress/dist/</code>에 들어가서 확인해보세요. 아예 .html 파일 내용이 깨진 텍스트로 구성되어 있을거에요.</p><p>즉, 텍스트 깨짐은 프레임워크 단계, <code>dev</code>나 <code>build</code>과정에서 발생하는 것이지, 브라우저가 파일을 잘못 읽는 게 아니랍니다.</p></details>',7),P={render:function(s,n){const e=(0,a.up)("OutboundLink"),P=(0,a.up)("CodeGroupItem"),D=(0,a.up)("CodeGroup");return(0,a.wg)(),(0,a.j4)(a.HY,null,[l,(0,a.Wm)("p",null,[t,(0,a.Wm)("a",i,[p,(0,a.Wm)(e)]),c]),r,(0,a.Wm)("ul",null,[(0,a.Wm)("li",null,[o,u,(0,a.Wm)("img",{src:s.$withBase("images/vuepress/ps_001.png"),alt:"restricted"},null,8,["src"])])]),d,(0,a.Wm)("p",null,[m,h,(0,a.Wm)("img",{src:s.$withBase("images/vuepress/ps_002.png"),alt:"settingPs"},null,8,["src"])]),b,(0,a.Wm)("img",{src:s.$withBase("images/vuepress/ps_003.png"),alt:"compleps"},null,8,["src"]),g,(0,a.Wm)("img",{src:s.$withBase("images/vuepress/onlyThreeRectangle.png"),alt:"rayoutCrashed"},null,8,["src"]),v,k,f,(0,a.Wm)(D,null,{default:(0,a.w5)((()=>[(0,a.Wm)(P,{title:"베이스 O"},{default:(0,a.w5)((()=>[W])),_:1}),(0,a.Wm)(P,{title:"베이스 X"},{default:(0,a.w5)((()=>[y])),_:1})])),_:1}),x,(0,a.Wm)("p",null,[U,(0,a.Wm)("a",w,[E,(0,a.Wm)(e)]),_]),j,(0,a.Wm)("ol",null,[(0,a.Wm)("li",null,[(0,a.Wm)("a",T,[q,(0,a.Wm)(e)]),$])]),(0,a.Wm)("img",{src:s.$withBase("images/vuepress/encoding-err-00.png"),style:{width:"500px"}},null,8,["src"]),B,(0,a.Wm)("img",{src:s.$withBase("images/vuepress/encoding-err-01.png")},null,8,["src"]),S,(0,a.Wm)("img",{src:s.$withBase("images/vuepress/encoding-err-02.png")},null,8,["src"]),C],64)}}}}]);