(self.webpackChunkuntil=self.webpackChunkuntil||[]).push([[667],{7144:(s,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>t});const t={key:"v-6fa2ecfe",path:"/pg/lang/html_css/",title:"HTML&CSS를 다루면서",lang:"ko-KR",frontmatter:{},excerpt:"",headers:[{level:2,title:"HTML이 일하는 방법",slug:"html이-일하는-방법",children:[]},{level:2,title:"HTML과 CSS를 왜 같이 다루나요?",slug:"html과-css를-왜-같이-다루나요",children:[]},{level:2,title:"HTML은 뭘로 코딩하나요?",slug:"html은-뭘로-코딩하나요",children:[]}],filePathRelative:"pg/lang/html_css/README.md",git:{updatedTime:1618111288e3}}},2313:(s,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>u});var t=a(6252);const p=(0,t.uE)('<h1 id="html-css를-다루면서"><a class="header-anchor" href="#html-css를-다루면서">#</a> HTML&amp;CSS를 다루면서</h1><p>HTML과 CSS, 웹 페이지를 만들기 위한 언어죠. HTML과 CSS는 많은 프로그래머와 프로그래밍을 공부하는 사람들에게 &#39;프로그래밍 언어&#39;로 인정받지는 못해요. <s>그야 당연히 프로그래밍 언어가 아니니ㄲ</s></p><p>그런데 사실, 두 언어는 정말로 <strong>프로그래밍 언어가 아니에요.</strong> HTML은 <code>마크업 언어</code>에 속하는 언어이고, CSS는 HTML과 같은 마크업 언어의 표현 방식을 설명하기 위한 언어에요. HTML의 경우 문서나 정보의 간단한 기술을 위해, CSS의 경우 그런 녀석들을 꾸미기 위해 출발한 녀석이죠. 두 개 언어 모두 구조가 상당히 간단해서, 기본적인 것만 알면 태그 사전(HTML)이나 프로퍼티 예시(CSS)를 참고하면서 코딩하기도 쉬워요.</p><div class="custom-container warning"><p class="custom-container-title">능력있는 개발자는 HTML의 태그나 CSS의 프로퍼티들을 암기하나요?</p><p>글쎄...굳이요? 개발자들은 대게 효율을 중시하는데, 그건 별로 효율적이지 않아요.<br> 물론 자주 쓰다보면 많은 수의 태그나 프로퍼티가 &#39;외워진 상태&#39;일 수는 있겠죠.<br> 하지만 굳이 시간을 내서 외우는 건 정말 쓸모없어요.</p></div><blockquote><p>HTML의 &#39;ML&#39;은 그 자체로 이미 마크업-언어(Markup-Language)라는 뜻이에요.</p></blockquote><h2 id="html이-일하는-방법"><a class="header-anchor" href="#html이-일하는-방법">#</a> HTML이 일하는 방법</h2><p>HTML은 많은 브라우저(크롬, 사파리, 파이어폭스, etc...)들과 약속이 되어있어요. <code>HTML이 이렇게 말하면: 브라우저는 이렇게 보여주자.</code>라고 말이죠. 그렇기에, HTML이 웹을 지배하는 언어라고 해도 무방하죠. 웹 페이지들의 소스(F12를 누르면 보통 보여져요)를 열어보면,</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    ...\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n      <span class="token operator">...</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>와 같이 생긴 html 구조를 볼 수 있을거에요. 물론 이것만으로 웹 페이지 개발이 손수 html 파일을 작성하여 이루어진다고 해석하기에는 무리가 있어요. 제 블로그만 봐도, <em>F12로 보이는 페이지 소스는 html이지만, 저는 VuePress 프레임워크를 이용해서 마크다운</em> 으로 작업했는걸요? 그럼에도, html을 알고 있는 것과 모르는 것은 웹을 해석하고 만드는 데 근본적인 차이가 생기죠. &#39;웹&#39;에 접근하고 싶다면 html이 기본이고, 여기서 시작하는게 <u>정답이에요.</u> 자, 이제 쉬우면서도 기본인 html을 같이 배워봅시다.</p><div class="custom-container danger"><p class="custom-container-title">그거 아세요?</p><p>사실 HTML이 아무리 쉬운 언어이고, 프로그래밍 언어가 아니라고 해도,<br> 본격적으로 공부하면 꽤 어려워요. 만만히 봤다가는 큰 코 다치기 딱 좋죠.</p></div><h2 id="html과-css를-왜-같이-다루나요"><a class="header-anchor" href="#html과-css를-왜-같이-다루나요">#</a> HTML과 CSS를 왜 같이 다루나요?</h2><p>그거야 간단해요.<br><strong>1)HTML은 CSS를 만났을 때 완전히 딴판이기 때문이고</strong>, <strong>2)제가 두 개를 동시에 공부할거거든요</strong>.</p><h2 id="html은-뭘로-코딩하나요"><a class="header-anchor" href="#html은-뭘로-코딩하나요">#</a> HTML은 뭘로 코딩하나요?</h2><p>가장 단순하게는 윈도우 기본 메모장(Notepad)로도 가능해요. 다만, 저장할 때 <strong>파일 형식</strong>을 &#39;모든 형식&#39;으로 두고, 파일 제목에 <em>.html</em>을 붙여서 이 파일이 html 파일임을 명시해줘야 하지요.</p>',14),e=(0,t.Uk)("좀 편한 방법으로는, 만능 에디터 VSCode(Visual Studio Code)를 추천할게요. 그냥 비쥬얼 스튜디오랑 비쥬얼 스튜디오 코드는 서로 다른 거에요! "),l={href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"},c=(0,t.Uk)("이 링크"),o=(0,t.Uk)("에서 다운받을 수 있어요. VSCode의 경우, Extension(확장...팩?)만 제대로 설치해주면 HTML 뿐만 아니라 거의 모든 언어를 편집할 수 있어요!"),u={render:function(s,n){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.j4)(t.HY,null,[p,(0,t.Wm)("p",null,[e,(0,t.Wm)("a",l,[c,(0,t.Wm)(a)]),o])],64)}}}}]);