(self.webpackChunkuntil=self.webpackChunkuntil||[]).push([[643],{1334:(e,n,s)=>{"use strict";s.r(n),s.d(n,{data:()=>a});const a={key:"v-540a3ec0",path:"/tech/blog/vuepress/ready_for_blog.html",title:"뷰프레스 사전준비",lang:"ko-KR",frontmatter:{},excerpt:"",headers:[{level:2,title:"깃허브:소개",slug:"깃허브-소개",children:[{level:3,title:"뭘 공유하나요?",slug:"뭘-공유하나요",children:[]},{level:3,title:"그래서 깃이 도대체 뭔데요?",slug:"그래서-깃이-도대체-뭔데요",children:[]},{level:3,title:"용어들(커밋, 레포지토리, 푸시, 풀, 깃 클론, etc...)",slug:"용어들-커밋-레포지토리-푸시-풀-깃-클론-etc",children:[]}]},{level:2,title:"대략적인 블로그 개발 과정",slug:"대략적인-블로그-개발-과정",children:[]},{level:2,title:"준비물 0: VScode",slug:"준비물-0-vscode",children:[]},{level:2,title:"준비물 1: GitHub repository",slug:"준비물-1-github-repository",children:[]},{level:2,title:"준비물 2: Git",slug:"준비물-2-git",children:[]},{level:2,title:"준비물 3: Clone it!",slug:"준비물-3-clone-it",children:[]},{level:2,title:"준비물 4: Node 와 yarn",slug:"준비물-4-node-와-yarn",children:[]},{level:2,title:"준비물 마지막: yarn 초기화와 뷰프레스",slug:"준비물-마지막-yarn-초기화와-뷰프레스",children:[]}],filePathRelative:"tech/blog/vuepress/ready_for_blog.md",git:{updatedTime:1622083149e3}}},5776:(e,n,s)=>{"use strict";s.r(n),s.d(n,{default:()=>Ee});var a=s(6252);const l=(0,a.Wm)("h1",{id:"뷰프레스-사전준비",tabindex:"-1"},[(0,a.Wm)("a",{class:"header-anchor",href:"#뷰프레스-사전준비","aria-hidden":"true"},"#"),(0,a.Uk)(" 뷰프레스 사전준비")],-1),t=(0,a.Wm)("p",null,"뷰프레스를 쓰려면, 어렵지는 않지만 필요한 몇 가지가 있어요.",-1),r=(0,a.Uk)("뷰프레스가 뭔지 대충 이해하고 있으면 좋구요.(바로 위 "),i={href:"/src/vuepress/#%EB%B7%B0%ED%94%84%EB%A0%88%EC%8A%A4-%EC%86%8C%EA%B0%9C",target:"_blank",rel:"noopener noreferrer"},o=(0,a.Uk)("뷰프레스:소개"),c=(0,a.Uk)("정도만 알아도 돼요.)"),d=(0,a.Uk)("깃허브를 몇 번 쓴 경험이 있다면 좋아요. "),p=(0,a.Uk)("없다면 바로 아래 "),u={href:"/src/vuepress/ready_for_blog.html#%EA%B9%83%ED%97%88%EB%B8%8C-%EC%86%8C%EA%B0%9C",target:"_blank",rel:"noopener noreferrer"},m=(0,a.Uk)("깃허브:소개"),h=(0,a.Uk)("를 참고해보세요."),g=(0,a.Wm)("li",null,"마지막으로, 아래 설명되어있는 과정을 잘 따라가시면 돼요.",-1),b=(0,a.Wm)("div",{class:"custom-container danger"},[(0,a.Wm)("p",{class:"custom-container-title"},"오류를 찾으셨다면, 메일주세요!"),(0,a.Wm)("p",null,[(0,a.Uk)("밑에 오는 내용들 중 오류가 있다면, audgkwns44@gmail.com 으로 메일 부탁드려요!"),(0,a.Wm)("br"),(0,a.Uk)(" 메일 제목이 [오류발견][뷰프레스] 로 시작되면 더 좋구요.")])],-1),k=(0,a.Wm)("h2",{id:"깃허브-소개",tabindex:"-1"},[(0,a.Wm)("a",{class:"header-anchor",href:"#깃허브-소개","aria-hidden":"true"},"#"),(0,a.Uk)(" 깃허브:소개")],-1),v={class:"custom-container tip"},W=(0,a.Wm)("p",{class:"custom-container-title"},"항상 저는, 오피셜 가이드를 먼저 추천해요.",-1),f={href:"https://guides.github.com/activities/hello-world/",target:"_blank",rel:"noopener noreferrer"},y=(0,a.Uk)("오피셜 가이드"),x=(0,a.Uk)("만큼 완벽한 설명은 없으니까요. 물론 이번에도 영어구요 😃"),U=(0,a.Wm)("br",null,null,-1),C=(0,a.Uk)(" 아래 쓰여지는 내용도 오피셜 가이드를 많이 참고하여 쓰여졌어요."),E=(0,a.uE)('<div class="custom-container warning"><p class="custom-container-title">여기서 하는 깃허브에 대한 이야기는</p><p>어디까지나 블로그를 만들기 위한 정말 &#39;기본적인 이야기&#39;들만 적어놓은 거에요. 더 많은 쓰임새나 사용법을 알고싶으시다면, 음...따로 공부하셔야 해요!</p></div><p>영어로는 GitHub, 한글로는 &#39;깃허브&#39;가 되겠죠. (간혹 &#39;짓허브&#39;라고 읽기도 해요.)<br> 깃허브는 <strong>허브</strong>라는 이름에 어울리게, <em>공유</em> 에 가장 큰 초점을 두고 있는 플랫폼이에요.</p><blockquote><p>가능한 한 쉽게 설명하기 위해, 줄글보다 QnA식으로 적어놓을게요. 괜찮죠?</p></blockquote><h3 id="뭘-공유하나요" tabindex="-1"><a class="header-anchor" href="#뭘-공유하나요" aria-hidden="true">#</a> 뭘 공유하나요?</h3><hr><p>음, 아주 핵심을 꿰뚫는 질문이네요. 깃허브는 그 이름에서 알 수 있듯이 &#39;깃&#39;을 위한 &#39;허브&#39;에요.<br><strong>&#39;공유하는 것==깃&#39;</strong> 이라는 말은 아니구요, <strong>&#39;깃 하기 위한 허브(저장소)&#39;</strong> 쯤이 맞겠네요.</p><p>&#39;깃&#39; 하면서 여러분이 공유하는 것은, 여러분의 코드, 여러분의 프로그램, 여러분의 프로젝트에요.</p><h3 id="그래서-깃이-도대체-뭔데요" tabindex="-1"><a class="header-anchor" href="#그래서-깃이-도대체-뭔데요" aria-hidden="true">#</a> 그래서 깃이 도대체 뭔데요?</h3><hr><p><strong>&#39;깃&#39;은 버전 관리 시스템이에요.</strong> 코드의 공동 작업과 버전 관리를 돕는 것이 깃의 주 역할이랍니다.</p><p>버전 관리라고 하면, 플레이스토어와 같은 곳에서 새로운 버전이 나왔을 때 업데이트 하는 걸 떠올리기 쉬운데, 그것보다는 여러분의 레포트가 &#39;보고서<em>최종.docx&#39;에서 &#39;보고서</em>최종_마지막.docx&#39;이 되는 버전 관리에 가까워요.</p>',11),_=(0,a.Uk)("지속적으로 일어나는 코드의 변화를 담고, "),w=(0,a.Wm)("code",null,"개발 과정",-1),B=(0,a.Uk)("이 저장되는 거죠. 이것들이 저장되는 공간이 바로 깃허브의 '레포지토리(저장소)' 구요."),S=(0,a.Wm)("br",null,null,-1),N=(0,a.Uk)(" 아, 깃허브가 단순히 여러 버전을 저장만 해 주는 건 아니에요. 언제 어디서나 깃허브에 로그인하고 '깃'이 설치되어 있다면 로컬 저장소에 코드나 프로그램을 불러올 수 있기도 하고, 변화가 생겼을 때 무엇이 바뀌었는지 볼 수도 있어요. 아래 그림은 제 블로그 설정파일(.vuepress/config.js)의 변화 예시에요. "),A=(0,a.Uk)(" 그림을 보면, '기존 47번 줄의 ~~내용이 새로운 47번 줄 ~~로 바뀌었구나'는 걸 한 눈에 볼 수 있죠."),D=(0,a.Wm)("blockquote",null,[(0,a.Wm)("p",null,[(0,a.Uk)("개발 과정이 저장된다는 점에서,"),(0,a.Wm)("br"),(0,a.Uk)(" 깃허브를 '사람들이 프로그램을 개발하는 과정'이라고 부풀려 말하기도 해요.")])],-1),V=(0,a.Uk)("그렇다면 공동 작업은 어떻게 도울까요? '브랜치'라는 깃허브의 기능이 바로 그 해답이에요."),q=(0,a.Wm)("br",null,null,-1),P=(0,a.Uk)(" 아래 그림은 "),G={href:"https://guides.github.com/activities/hello-world/",target:"_blank",rel:"noopener noreferrer"},j=(0,a.Uk)("공식 가이드"),H=(0,a.Uk)("에 있는 브랜치에 대한 설명이에요. "),M=(0,a.Uk)(" 마스터 브랜치에서 당신만의 새 브렌치(복사본)를 나눠내는 행동이 바로 브랜칭이에요."),$=(0,a.Wm)("br",null,null,-1),L=(0,a.Uk)(" 여기에 수정하고 싶은 것들을 마음껏 작업하고, 마스터 브랜치에 올라온 새 변경사항들을 당겨오고, 동료 작업자들과 변경 사항에 대해 토론을 주고받아 '변경사항이 본 프로젝트에 적합하다'고 판단되면 마스터 브랜치와 합치게 되는 겁니다."),R=(0,a.uE)('<h3 id="용어들-커밋-레포지토리-푸시-풀-깃-클론-etc" tabindex="-1"><a class="header-anchor" href="#용어들-커밋-레포지토리-푸시-풀-깃-클론-etc" aria-hidden="true">#</a> 용어들(커밋, 레포지토리, 푸시, 풀, 깃 클론, etc...)</h3><hr><p>깃허브와 깃을 이해하기 위해서, 마지막으로 알아야 할 것은 몇몇 용어들이에요. 함께 볼까요?</p><table><thead><tr><th style="text-align:right;">단어</th><th style="text-align:left;">영어로</th><th style="text-align:left;">뜻</th></tr></thead><tbody><tr><td style="text-align:right;">커밋</td><td style="text-align:left;">commit</td><td style="text-align:left;">코드를 수정한 후, 수정사항을 반영하고자 신청하는 것</td></tr><tr><td style="text-align:right;">풀</td><td style="text-align:left;">pull</td><td style="text-align:left;">(특히 공동 작업에서) 변경된 사항들을 내 로컬 저장소로 가져오는 것</td></tr><tr><td style="text-align:right;">푸시</td><td style="text-align:left;">push</td><td style="text-align:left;">올라온 커밋(수정사항)을 레포지토리에 꽂아버리는 것</td></tr><tr><td style="text-align:right;">풀 리퀘스트</td><td style="text-align:left;">pull request</td><td style="text-align:left;">브랜치를 쪼개 올린 커밋에 대해, 수정이 끝난 브랜치를 마스터 브랜치에 머지해달라고 요청하는 것</td></tr><tr><td style="text-align:right;">클론</td><td style="text-align:left;">clone</td><td style="text-align:left;">&#39;git clone&#39;과 같은 명령어로 사용하게 되며, 특정 레포지토리를 내 로컬 저장소로 복사(다운로드)하는 것</td></tr></tbody></table><div class="custom-container warning"><p class="custom-container-title">푸시와 풀 리퀘스트의 차이가 뭔가요?</p><p>푸시(git push)는 커밋(commit, 수정사항)을 바로 반영해버리는 것(꽂는 것)이구,<br> 풀 리퀘(pull request)는 수정사항을 반영해도 될까요? 하고 묻는 거에요.</p></div><p>이걸로, 깃허브:소개는 마칠게요. 이제는 블로그 개발 과정과 본격적으로 준비해야 하는 것들이에요 😃</p><h2 id="대략적인-블로그-개발-과정" tabindex="-1"><a class="header-anchor" href="#대략적인-블로그-개발-과정" aria-hidden="true">#</a> 대략적인 블로그 개발 과정</h2><p>블로그를 어느 정도 구성한 다음, 내용이 추가될 때 마다 거치는 작업은 다음과 같아요.</p><ol><li>내용을 추가/수정/삭제한다. <ul><li>이 과정에서, dev를 이용해 제대로 수정되었는지 반복 검토하게 돼요.</li></ul></li><li>해당 수정 사항들을 Stage에 올린다(commit하기 전 검토 단계 쯤이라고 보면 돼요.)</li><li>Stage에 올라간 수정사항들을 Commit 한다.</li><li>Commit된 수정사항을 Push한다. (레포지토리 업데이트)</li><li>Deploying을 통해 블로그를 업데이트한다.</li></ol><h2 id="준비물-0-vscode" tabindex="-1"><a class="header-anchor" href="#준비물-0-vscode" aria-hidden="true">#</a> 준비물 0: VScode</h2><p>VScode, 비쥬얼 스튜디오 코드(Visual Studio Code)는 꼭 준비해야 할 <strong>필수품</strong>은 아니에요. 다만, 뷰프레스를 이용하여 편하게 블로그 문서를 작성하고, 관리하려면 권장되는 준비물일 뿐이죠.<br> VScode는 &#39;소스 코드 편집기&#39;에요. 우리가 쓸 .md(마크다운), .js(자바스크립트)를 비롯해서 다양한 코드들을 읽어내고, 편집할 수 있어요. 코드블럭이나 Dev C++와 같은 IDE(개발 환경)이라고 보기에는 무리가 있지만, 정말 깔끔하고 편한 에디터에요. <em>저는 뷰프레스 블로그 작성에 이 VScode의 사용을 권장합니다</em></p><details class="custom-container details"><summary>VScode로 할 수 있는 것들?</summary><p>거의 모든 언어를 편집할 수 있어요. 여러분이 확장팩(Extension)만 잘 깔아준다면요.<br> Python Extension을 깔아주면, python으로 코딩하고 빌드해볼 수 있구요,<br> C/C++ Extension을 깔아주면, C/C++의 구문 강조, 코드 편집 등이 가능하죠.</p></details><h2 id="준비물-1-github-repository" tabindex="-1"><a class="header-anchor" href="#준비물-1-github-repository" aria-hidden="true">#</a> 준비물 1: GitHub repository</h2>',13),T=(0,a.Uk)("내 블로그를 이루는 설정파일, 글, 디렉토리 등등...모든 것이 저장된 저장소가 가장 먼저 필요하겠죠?"),I=(0,a.Wm)("br",null,null,-1),K=(0,a.Uk)(" 그게 바로 레포지토리에요. "),O={href:"https://guides.github.com/activities/hello-world/",target:"_blank",rel:"noopener noreferrer"},Q=(0,a.Uk)("깃헙 오피셜 가이드:헬로월드"),Y=(0,a.Uk)("를 보면 기본적인 레포지토리 만들기를 따라하실 수 있을거에요. 레포지토리 만들기는 정말 정말 쉬우니, 한 번 따라해보세요."),z=(0,a.Wm)("br",null,null,-1),F=(0,a.Uk)(" 레포지토리 이름은 블로그 이름과는 관계없어요. 여러분이 하고 싶으신 대로 하면 돼요."),J=(0,a.Wm)("blockquote",null,[(0,a.Wm)("p",null,"제 경우 블로그 이름은 \"하준's 학습블로그\"지만, 레포지토리 이름은 'study_b'에요."),(0,a.Wm)("div",{class:"custom-container danger"},[(0,a.Wm)("p",{class:"custom-container-title"},"네이밍 규칙"),(0,a.Wm)("p",null,[(0,a.Uk)("가능하면, 레포지토리 이름에 영문 대문자는 포함시키지 마세요. 나중에 고생할 수 있습니다."),(0,a.Wm)("br"),(0,a.Uk)(" 숫자로 시작하지 않기, 특수문자 쓰지 않기, 공백 넣지 않기 등등 기본적인 것들도 지키시구요.")])])],-1),X=(0,a.Wm)("h2",{id:"준비물-2-git",tabindex:"-1"},[(0,a.Wm)("a",{class:"header-anchor",href:"#준비물-2-git","aria-hidden":"true"},"#"),(0,a.Uk)(" 준비물 2: Git")],-1),Z=(0,a.Uk)("레포지토리를 잘 만드셨나요? 이제 "),ee={href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"},ne=(0,a.Uk)("Git"),se=(0,a.Uk)("을 설치하세요."),ae=(0,a.Wm)("br",null,null,-1),le=(0,a.Uk)(" 깃을 설치해야 레포지토리를 로컬 저장소로 가져올 수 있고, 수정 사항을 깃허브로 보낼 수 있습니다."),te=(0,a.Wm)("h2",{id:"준비물-3-clone-it",tabindex:"-1"},[(0,a.Wm)("a",{class:"header-anchor",href:"#준비물-3-clone-it","aria-hidden":"true"},"#"),(0,a.Uk)(" 준비물 3: Clone it!")],-1),re=(0,a.Uk)("깃과 레포지토리가 모두 준비되었다면, 레포지토리를 가져옵시다."),ie=(0,a.Wm)("br",null,null,-1),oe=(0,a.Uk)(" 깃허브 레포지토리에 들어가면, 오른쪽 위에 초록색 '↓Code' 버튼이 있어요."),ce=(0,a.Wm)("br",null,null,-1),de=(0,a.Uk)(" 이 버튼을 눌러서 나오는 주소를 복사해두세요."),pe=(0,a.uE)('<p>자 이제, 스크립팅 환경을 켜주세요. CMD가 될 수도 있고, Windows PowerShell이 될 수도 있겠죠.<br> 만약 VScode를 설치하셨다면, <code>ctrl</code>+<code>백틱</code> 을 통해 Windows PowerShell을 VScode 안에서 열 수도 있어요. 맥은...잘 모르겠어요 😓</p><p>자, cd 명령어를 통해 깃허브 레포지토리 복사하기 적당한 디렉토리로 이동하세요.<br> 저는 깃 특성 상 가깝고 한글 디렉토리 이름이 없는, documents(문서)폴더 안에 깃허브용 폴더를 하나 만드시는 걸 추천드려요.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> c:/\n<span class="token builtin class-name">cd</span> <span class="token function">users</span>\n<span class="token builtin class-name">cd</span> Username <span class="token comment"># Username 자리에 본인 컴퓨터 계정명을 입력해야 해요</span>\n<span class="token builtin class-name">cd</span> documents\n\n<span class="token function">mkdir</span> directoryname <span class="token comment"># directoryname이라는 이름을 가진 폴더를 만드는 명령어에요.</span>\n<span class="token comment"># 임의로 원하는 폴더명을 지정해도 좋아요. 단, 대문자는 지양해요.</span>\n\n<span class="token builtin class-name">cd</span> directoryname <span class="token comment"># 위에서 임의 폴더명을 넣었다면 여기도 그걸로 실행하세요.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>이제 레포지토리를 클론하세요:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/username/foo.git <span class="token comment"># 복사한 레포지토리 주소를 붙여넣으세요.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>클론까지 다 되었네요. 수고하셨어요!</p><h2 id="준비물-4-node-와-yarn" tabindex="-1"><a class="header-anchor" href="#준비물-4-node-와-yarn" aria-hidden="true">#</a> 준비물 4: Node 와 yarn</h2>',7),ue=(0,a.Uk)("앞으로 꼭 필요한 Node와 yarn을 설치할게요."),me=(0,a.Wm)("br",null,null,-1),he=(0,a.Uk)(" Node는 "),ge={href:"https://nodejs.org/ko/download/",target:"_blank",rel:"noopener noreferrer"},be=(0,a.Uk)("이 사이트"),ke=(0,a.Uk)("에서 다운 및 설치가능하구(LTS로 받으세요!), yarn은 Node를 통해서 설치할거에요."),ve=(0,a.uE)('<div class="custom-container warning"><p class="custom-container-title">Node를 설치하실 때</p><p>Node 하나만 설치하세요. Node가 설치해준다고 하는 다른 들러리들은 모두 없어도 돼요.</p></div><p>설치하셨나요? 이제 확인해봅시다.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> -version\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>했을 때, 버젼(x.xx.x)이 출력되면 정상이에요.</p><div class="custom-container tip"><p class="custom-container-title">잠깐만요, 저는 npm이라는 걸 설치한 적이 없는데요?</p><p>앗 맞아요, 여러분이 설치한 건 Node.js지 NPM이 아니죠!<br> 하지만, <strong>NPM</strong> 이 <strong>N</strong>ode <strong>P</strong>ackage <strong>M</strong>anager 이랍니다. 안심하고 점검하세요!</p></div><p>yarn을 깔아야겠죠?</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token function">yarn</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>마찬가지로, yarn이 잘 깔렸는지 확인합시다.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> -version\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>이번에도 버젼(x.xx.x)이 출력되면 잘 된거에요.</p>',10),We={class:"custom-container danger"},fe=(0,a.Wm)("p",{class:"custom-container-title"},"혹시 yarn -version 명령어가 실행되지 않나요?",-1),ye={href:"/src/vuepress/rfv_errors.html#%ED%8C%8C%EC%9B%8C%EC%89%98-%EB%B3%B4%EC%95%88-%EB%AC%B8%EC%A0%9C",target:"_blank",rel:"noopener noreferrer"},xe=(0,a.Uk)("'여기'를 클릭해서"),Ue=(0,a.Uk)(" 파워쉘 보안 문제인지 확인해보세요!"),Ce=(0,a.uE)('<h2 id="준비물-마지막-yarn-초기화와-뷰프레스" tabindex="-1"><a class="header-anchor" href="#준비물-마지막-yarn-초기화와-뷰프레스" aria-hidden="true">#</a> 준비물 마지막: yarn 초기화와 뷰프레스</h2><p>yarn을 깔았다면, 초기 셋팅을 해 주어야 겠죠?<br> 초기 셋팅은 언제나 프로젝트 디렉토리에서 하는 것 잊지 마시구요.</p><details class="custom-container details"><summary>디렉토리로 이동하는 거, 다시 알고싶으면 누르세요. :)</summary><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> c:/users/<span class="token operator">&lt;</span>username<span class="token operator">&gt;</span>/documents/<span class="token operator">&lt;</span>directoryName<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>쉬운 명령어에요.</p></details><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">install</span>\n<span class="token function">yarn</span> init -y\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>여기까지 하면, 뷰프레스를 &#39;설치&#39;할 준비가 끝난거에요. 축하해요!</p><p>바로, 뷰프레스를 여러분 블로그 폴더(레포지토리 클론)에 설치만 해 둡시다.😃</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> vuepress -D\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>-D 태그는, 현재 폴더에만 의존성으로 설치하는 거에요. (-G, 글로벌과 반대) 우리는 뷰프레스를 이 폴더에서(이 블로그를 위해) 사용할 거니까, 여기에다만 설치하면 되거든요.</p><p><strong>축하드려요, 여기까지만 하면 뷰프레스로 블로그를 만들 &#39;준비&#39;는 모두 끝났어요.</strong><br> 다음 글에서는, 본격적으로 뷰프레스 공식 가이드 번역 작업이 시작돼요. 마지막 글에는 제가 겪은 오류들을 정리해 놓을 거구요. 혹시 뜻대로 진행되지 않고 오류가 발생된다면, 마지막 글에서 같은 오류가 있지는 않나 한 번 찾아보셔요!</p><blockquote><p>사실, 준비물 4번부터는 뷰프레스 공식 가이드에도 중복되는 내용이랍니다.<br> 뭐, 미리 준비하면 편하잖아요?</p></blockquote>',10),Ee={render:function(e,n){const s=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.j4)(a.HY,null,[l,t,(0,a.Wm)("ol",null,[(0,a.Wm)("li",null,[r,(0,a.Wm)("a",i,[o,(0,a.Wm)(s)]),c]),(0,a.Wm)("li",null,[d,(0,a.Wm)("ul",null,[(0,a.Wm)("li",null,[p,(0,a.Wm)("a",u,[m,(0,a.Wm)(s)]),h])])]),g]),b,k,(0,a.Wm)("div",v,[W,(0,a.Wm)("p",null,[(0,a.Wm)("a",f,[y,(0,a.Wm)(s)]),x,U,C])]),E,(0,a.Wm)("p",null,[_,w,B,S,N,(0,a.Wm)("img",{src:e.$withBase("images/vuepress/git_example_001.png"),alt:"Chages_example"},null,8,["src"]),A]),D,(0,a.Wm)("p",null,[V,q,P,(0,a.Wm)("a",G,[j,(0,a.Wm)(s)]),H,(0,a.Wm)("img",{src:e.$withBase("images/vuepress/branching.png"),alt:"branching"},null,8,["src"]),M,$,L]),R,(0,a.Wm)("p",null,[T,I,K,(0,a.Wm)("a",O,[Q,(0,a.Wm)(s)]),Y,z,F]),J,X,(0,a.Wm)("p",null,[Z,(0,a.Wm)("a",ee,[ne,(0,a.Wm)(s)]),se,ae,le]),te,(0,a.Wm)("p",null,[re,ie,(0,a.Wm)("img",{src:e.$withBase("images/vuepress/git_clone.png"),alt:"gitClone"},null,8,["src"]),oe,ce,de]),pe,(0,a.Wm)("p",null,[ue,me,he,(0,a.Wm)("a",ge,[be,(0,a.Wm)(s)]),ke]),ve,(0,a.Wm)("div",We,[fe,(0,a.Wm)("p",null,[(0,a.Wm)("a",ye,[xe,(0,a.Wm)(s)]),Ue])]),Ce],64)}}}}]);