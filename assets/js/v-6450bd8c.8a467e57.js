(self.webpackChunkuntil=self.webpackChunkuntil||[]).push([[379],{3261:(s,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>e});const e={key:"v-6450bd8c",path:"/tech/blog/vuepress/rfv_errors.html",title:"몇 가지 오류와 대처",lang:"ko-KR",frontmatter:{},excerpt:"",headers:[{level:2,title:"파워쉘 보안 문제",slug:"파워쉘-보안-문제",children:[{level:3,title:"문제 상황",slug:"문제-상황",children:[]},{level:3,title:"원인",slug:"원인",children:[]},{level:3,title:"해결",slug:"해결",children:[]}]},{level:2,title:"베이스 루트 문제",slug:"베이스-루트-문제",children:[{level:3,title:"문제 상황",slug:"문제-상황-1",children:[]},{level:3,title:"원인",slug:"원인-1",children:[]},{level:3,title:"해결",slug:"해결-1",children:[]}]},{level:2,title:"특정 파일의 추가",slug:"특정-파일의-추가",children:[{level:3,title:"상황 및 가정",slug:"상황-및-가정",children:[]},{level:3,title:"흐름",slug:"흐름",children:[]},{level:3,title:"개선",slug:"개선",children:[]}]},{level:2,title:"텍스트 깨짐 문제(인코딩 문제)",slug:"텍스트-깨짐-문제-인코딩-문제",children:[{level:3,title:"문제 상황",slug:"문제-상황-2",children:[]},{level:3,title:"원인",slug:"원인-2",children:[]},{level:3,title:"해결",slug:"해결-2",children:[]}]},{level:2,title:"Cannot create property '__probs' on string 'XXX'",slug:"cannot-create-property-probs-on-string-xxx",children:[{level:3,title:"Cannot create property '__probs' on string 'U'",slug:"cannot-create-property-probs-on-string-u",children:[]},{level:3,title:"원인",slug:"원인-3",children:[]},{level:3,title:"해결",slug:"해결-3",children:[]},{level:3,title:"Cannot create property '__probs' on string 'math'",slug:"cannot-create-property-probs-on-string-math",children:[]},{level:3,title:"원인",slug:"원인-4",children:[]},{level:3,title:"해결",slug:"해결-4",children:[]},{level:3,title:"참고",slug:"참고",children:[]}]}],filePathRelative:"tech/blog/vuepress/rfv_errors.md",git:{updatedTime:1620066971e3}}},3638:(s,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>Us});var e=a(6252);const t=(0,e.uE)('<h1 id="몇-가지-오류와-대처"><a class="header-anchor" href="#몇-가지-오류와-대처">#</a> 몇 가지 오류와 대처</h1><p>이 문서는 뷰프레스 프레임워크를 사용하여 블로그를 작성하면서, 맞닥뜨렸던 오류들을 적은 문서입니다.<br> 구성은 다음과 같고, &#39;해결&#39; 항목은 정보의 전달을 위해 조금 건조하게 작성하니 양해 바라요:</p><ul><li>오류 상황(오류 재현)</li><li>원인</li><li>해결</li><li>참고 <em>(optional)</em></li></ul><p>부디, 당신이 겪고 있는 &#39;알 수 없는 오류&#39;가 이 문서에서 해결된 것들 중에 있기를 바라요. ✊</p><h2 id="파워쉘-보안-문제"><a class="header-anchor" href="#파워쉘-보안-문제">#</a> 파워쉘 보안 문제</h2><h3 id="문제-상황"><a class="header-anchor" href="#문제-상황">#</a> 문제 상황</h3><p>저는 파워쉘로 npm, yarn 등을 설치하고 작업했어요.<br> yarn 설치까지는 성공했는데, 설치 확인을 위해 <code>yarn -version</code>을 명령하고 다음 오류를 받았어요:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token builtin class-name">:</span> 이 시스템에서 스크립트를 실행할 수 없으므로\nC:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>Administrator<span class="token punctuation">\\</span>AppData<span class="token punctuation">\\</span>Roaming<span class="token punctuation">\\</span>npm<span class="token punctuation">\\</span>yarn.ps1 파일을 로드할 수 없습니다.\n자세한 내용은 about_Execution_Policies<span class="token punctuation">(</span>https://go.microsoft.com/fwlink/?LinkID<span class="token operator">=</span><span class="token number">135170</span><span class="token punctuation">)</span>\n를 참조하십시오.\n\n위치 줄:1 문자:1 + <span class="token function">yarn</span> -v + ~~~~ + CategoryInfo\n<span class="token builtin class-name">:</span> 보안 오류: <span class="token punctuation">(</span>:<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>, PSSecurityException + FullyQualifiedErrorId <span class="token builtin class-name">:</span> UnauthorizedAccess\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',8),l=(0,e.Uk)("이 문제는 구글링을 통해 읽은, "),p={href:"https://extbrain.tistory.com/118",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Uk)("확장형 뇌 저장소님의 글"),c=(0,e.Uk)("을 따라해 해결어요."),r=(0,e.uE)('<h3 id="원인"><a class="header-anchor" href="#원인">#</a> 원인</h3><p><strong>파워쉘이 보안 문제를 이유로 yarn이 무언가를 실행할 수 없게 막은 것</strong> 이에요.<br> 보안에 퍽 까다로운 윈도우가 주는 숙제들 중 하나 쯤 되겠네요.</p><h3 id="해결"><a class="header-anchor" href="#해결">#</a> 해결</h3><ol><li>파워쉘을 <strong>관리자 권한</strong> 으로 실행 (혹시 모를 권한 문제를 대비)</li><li>다음의 명령어를 입력해, 파워쉘 정책이 yarn을 제한시키는지 아닌지 테스트 (대소문자 무관)</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ ExecutionPolicy\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',5),i=(0,e.Uk)("'Restricted'라고 뜨면, 보안 정책 문제가 맞습니다."),u=(0,e.Wm)("br",null,null,-1),d=(0,e.uE)('<ol start="3"><li>보안 정책 해제</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ Set-ExecutionPolicy unRestricted\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2),m={class:"custom-container details"},k=(0,e.Wm)("summary",null,"중간에 정말 변경할 건지 묻는 질문에 'y'로 동의",-1),b=(0,e.uE)('<ol start="4"><li>확인</li></ol><ul><li>ExcutionPolicy 명령으로 체크</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ ExecutionPolicy\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',3),g={class:"custom-container details"},h=(0,e.Wm)("summary",null,"'Unrestricted'가 떠야 정상",-1),v=(0,e.uE)('<ul><li><code>yarn -version</code>으로 yarn이 제 역할을 수행하는지 체크</li></ul><h2 id="베이스-루트-문제"><a class="header-anchor" href="#베이스-루트-문제">#</a> 베이스 루트 문제</h2><p>이 문제의 경우, <code>dev</code> 명령은 정상적이고, <code>build</code>는 의도대로 일하지 않으며, 페이지 빌드 결과물의 레이아웃이 적용되지 않은 상태로 존재해요.</p><div class="custom-container warning"><p class="custom-container-title">이건(dev는 정상, build는 실패 및 레이아웃이 깨진 결과물) 흔한 결과물이에요.</p><p>여기서 작성한 베이스 루트 문제 외에도 여러 가지 이유로 build만 실패하고, 검정색 사각형으로 시작하는 &#39;깨진 레이아웃&#39;이 나타날 수 있어요.<br> 따라서, 같은 증상이라고 해 베이스 루트 문제일것이라고 해석하기에는 무리가 커요.</p></div>',4),f=(0,e.Uk)("같은 결과물, "),W={href:"https://github.com/vuejs/vuepress/issues/575",target:"_blank",rel:"noopener noreferrer"},y=(0,e.Uk)("'Three black rectangle' 이 나온다는 이슈 예시"),x=(0,e.Uk)(", /vuejs/vuepress/에 올라옴"),U=(0,e.Wm)("br",null,null,-1),w=(0,e.Uk)(" 물론, 링크된 이슈는 이 오류를 해결하는 데 아무런 도움이 되지 않았음 😬"),_=(0,e.Wm)("h3",{id:"문제-상황-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#문제-상황-1"},"#"),(0,e.Uk)(" 문제 상황")],-1),q=(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"yarn dev"),(0,e.Uk)(" 명령에서는 문제 없이 의도한 페이지가 구성되는데 "),(0,e.Wm)("code",null,"yarn build"),(0,e.Uk)("에서는 레이아웃이 완전히 깨진 결과물이 출력됩니다. 제 경우, 세 개의 검정 사각형이 반기는 페이지가 구성되었어요.")],-1),E=(0,e.Wm)("h3",{id:"원인-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#원인-1"},"#"),(0,e.Uk)(" 원인")],-1),T=(0,e.Wm)("p",null,[(0,e.Uk)("config 파일에 "),(0,e.Wm)("code",null,"base="),(0,e.Uk)("의 대소문자를 잘못 적었어요."),(0,e.Wm)("br"),(0,e.Uk)(" base는 '여러분의 블로그가 시작되는 기반(루트) 주소'를 의미하고, 제 블로그의 경우 "),(0,e.Wm)("code",null,"/until/"),(0,e.Uk)(" 이 여기에 해당되죠. "),(0,e.Wm)("strong",null,"이 베이스 주소는, 레포지토리 이름과 일치하거나 없어야 한다는 점 주의하시기 바랍니다.")],-1),C=(0,e.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-javascript"},[(0,e.Wm)("code",null,[(0,e.Uk)("base"),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Wm)("span",{class:"token string"},"'/until/'"),(0,e.Uk)("\n")])]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br")])],-1),j=(0,e.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-javascript"},[(0,e.Wm)("code",null,[(0,e.Uk)("base"),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Wm)("span",{class:"token string"},"'/'"),(0,e.Uk)("\n")])]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br")])],-1),B=(0,e.uE)('<div class="custom-container tip"><p class="custom-container-title">베이스가 없는 경우와 있는 경우의 차이</p><p>없다면 <code>&lt;username&gt;.github.io/</code> 에 블로그가 deploying 되고,<br> 베이스를 지정했다면 <code>&lt;username&gt;.github.io/&lt;base&gt;/</code>에 블로그가 deploying 됩니다.</p></div><h3 id="해결-1"><a class="header-anchor" href="#해결-1">#</a> 해결</h3><p>당시 레포지토리 이름은 studyB 였고, 다음과 같이 수정했어요:</p><p>before:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token punctuation">{</span>\n    base <span class="token operator">:</span> <span class="token string">&#39;/studyb/&#39;</span><span class="token punctuation">,</span>\n    <span class="token operator">~</span><span class="token operator">~</span><span class="token operator">~</span>\n   <span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>after:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token punctuation">{</span>\n    base <span class="token operator">:</span> <span class="token string">&#39;/studyB/&#39;</span><span class="token punctuation">,</span>\n    <span class="token operator">~</span><span class="token operator">~</span><span class="token operator">~</span>\n   <span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>네 맞아요. 베이스 루트는 무려 대소문자를 구분해요.</p><div class="custom-container tip"><p class="custom-container-title">이래서 레포지토리 이름에 대문자 쓰는거 아니에요.</p><p>그래서 레포지토리 이름을 &#39;study_b&#39;로 바꾸게 되었죠.</p></div><details class="custom-container details"><summary>이 블로그의 이름은 study_b가 아니라 until 아닌가요?</summary><p>아 죄송해요, 혼선을 드렸네요. study_b는 이전 vuepress 1 framework를 이용할 당시의 블로그 이름이에요. 지금은 vuepress 2 framework를 이용중이구요.</p></details><h2 id="특정-파일의-추가"><a class="header-anchor" href="#특정-파일의-추가">#</a> 특정 파일의 추가</h2><div class="custom-container danger"><p class="custom-container-title">지금은 쓰지 않는 방법이에요.</p><p>html&amp;css 카테고리 예제파일에 적용했던 방법인데, 이제는 그 &#39;예제파일&#39; 구성을 취소했어요. 따라서 필요가 없어졌어요.</p></div><p>오류는 아니에요. 말 그대로 블로그를 deploying 할 때 &#39;내가 원하는 파일을 추가하고 싶어서&#39; 시도한 내용이죠. 생각보다 쉽고, 꽤 유용해요. 주로 적용 가능한 경우는:</p><ol><li>구글 서치 콘솔 소유권 증명을 위한 .html 파일 작성</li><li>사이트맵을 build 결과물에 포함</li><li>특정한 목적을 가진 페이지(ex: 404.html)의 임의포함</li><li>블로그 문서에 필요한 파일을 임의추가 <ul><li>뷰프레스가 지원하지 않는 파일이더라도 추가하고 링크를 걸어 사용가능</li></ul></li></ol><h3 id="상황-및-가정"><a class="header-anchor" href="#상황-및-가정">#</a> 상황 및 가정</h3><ul><li><p>상황</p><ul><li>블로그 베이스 루트 주소(~/until/)에 <code>src.file</code> 이라는 파일이 있다고 할게요.</li><li>이 파일을 매번 블로그를 deploying할 때 <code>~/until/target/</code>에 포함시키고 싶어요.</li></ul></li><li><p>가정</p><ul><li>앞으로 설명할 방법은 쉘 명령을 이용한 방법이에요.</li><li>따라서, <code>deploy.sh</code>파일을 이용한 반자동 deploying을 쓰시는 분들이 사용하기 편할거에요.</li></ul></li></ul><h3 id="흐름"><a class="header-anchor" href="#흐름">#</a> 흐름</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">find</span> <span class="token builtin class-name">.</span> -maxdepth <span class="token number">1</span> -name <span class="token string">&quot;src.file&quot;</span> -exec <span class="token function">cp</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> ./target/ <span class="token punctuation">\\</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>이 명령은 &quot;src.file&quot; 이라는 파일을 찾아서, ./target/ 에 복사를 실행하라고 하고 있어요.</p><details class="custom-container details"><summary>-maxdepth 1</summary><p>find 명령은 명령이 실행되는 곳을 기준으로 &#39;모든 하위 디렉토리&#39;를 탐색 대상으로 둬요.<br> 이 옵션을 추가해서 탐색의 최대 깊이를 1로 한정(=현재 폴더)할 수 있어요.</p></details><blockquote><p>구글에 <code>쉘 특정 파일 복사하기</code> 따위로 검색하면 비슷한 표현식들을 많이 찾을 수 있어요.</p></blockquote><p>이제 이 명령을 적당한 때에 실행해주면 되는데, &#39;적당한 때&#39;를 찾기 위해서 블로그가 어떤 순서로 deploying되고 있는지를 우선적으로 파악해야 해요.</p><p><strong>반자동 쉘 deploying</strong>을 쓰고 있다면, 다음과 같은 순서를 거치는 게 일반적이에요.</p><ol><li><code>deploy.sh</code>를 실행 <ul><li><code>npm run build</code> (블로그 빌드) <ul><li>빌드 결과물: /dist/ 에 저장</li></ul></li><li>쉘이 /dist/ 에 접근</li><li>/dist/ 에 있는 빌드 결과물을 gh-pages 브랜치로 git push</li></ul></li></ol><p>빌드될 때, /dist/에 있는 기존 파일들은 모두 삭제되고 시작돼요. 따라서 다음과 같이 순서를 잡아야해요:</p><ol><li><code>npm run build</code></li><li>target.file 복사 <em>&lt; 추가된 명령</em></li><li>gh-pages 브랜치로 git push</li></ol><p>그래서 <code>npm run build</code>와 <code>cd docs/.vuepress/dist</code> 사이에 다음 명령을 위치시켰어요.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> -maxdepth <span class="token number">1</span> -name <span class="token string">&quot;sitemap.xml&quot;</span> -exec <span class="token function">cp</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> ./docs/.vuepress/dist/ <span class="token punctuation">\\</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>이 코드는 블로그가 빌드 된 상태(/dist/에 빌드 결과물이 저장된 상태)에서,<br><strong>sitemap.xml 파일을 /dist/ 폴더로 복사</strong>해요. 이후에 /dist/폴더 내용물이 gh-pages로 푸시되니, sitemap.xml도 같이 푸시되죠.</p><blockquote><p>실행 타이밍과 그에 따른 파일의 위치, 목적지의 경로가 중요해요.</p></blockquote><h3 id="개선"><a class="header-anchor" href="#개선">#</a> 개선</h3><p>복사 대상을 <em>&#39;파일&#39;</em> 한 개에서 <em>&#39;폴더&#39;</em> 로 바꾸기 위해, 명령어를 <strong>조금</strong> 수정했어요.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">cp</span> -r TargetFolder /PasteToHere/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>find</code> 명령어는 복사에 한계가 있어서, 훨씬 편한 <code>cp</code> 명령을 쓰게 되었어요. 위 예시 코드의 cp 명령은 다음과 같은 명령을 수행해요</p><ol><li>현재 경로에서 &#39;TargetFolder&#39; 폴더를 찾아</li><li>/PasteToHere/에 복사</li></ol><p>그리고, 이렇게 적용했어요:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">..</span>.\n<span class="token comment"># CUSTOM SETTINGS : WROTE BY HAJUN</span>\n\n<span class="token comment"># -maxdepth 1 : for exclude childe folders</span>\n<span class="token builtin class-name">cd</span> docs/src/\n<span class="token comment"># copy&amp;past specific &#39;folder&#39;</span>\n<span class="token function">cp</span> -r TargetFolder <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/.vuepress/dist/src/PasteToHere/\n<span class="token comment"># go back to the origin(root) directory</span>\n<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/\n\n<span class="token comment"># CUSTOM SETTINGS: END</span>\n<span class="token punctuation">..</span>.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="텍스트-깨짐-문제-인코딩-문제"><a class="header-anchor" href="#텍스트-깨짐-문제-인코딩-문제">#</a> 텍스트 깨짐 문제(인코딩 문제)</h2><p>vuepress 2로 블로그를 migration 하기 위해 다시 공식 가이드를 따라가는 중, 아주 머리아프고 알 수 없는 오류를 <strong>또</strong> 만났어요. 그리고 언제나와 같이, <strong>역시나</strong> 윈도우라서 문제가 생겼던 것으로 밝혀겼죠.</p><div class="custom-container tip"><p class="custom-container-title">행복-개발을 하고싶나요?</p><p>일단 당신 앞에 있는 그 윈도우부터 치워버리고 맥북을 사세요.</p></div><h3 id="문제-상황-2"><a class="header-anchor" href="#문제-상황-2">#</a> 문제 상황</h3><p>이 문제는, 블로그를 처음 셋팅할 때 주로 일어나고, <code>dev</code>나 <code>build</code>에 오류는 없지만, 내용 텍스트가 깨져버려요. 예시를 보여드릴게요:</p>',42),P={href:"https://vuepress2.netlify.app/guide/getting-started.html#manual-installation",target:"_blank",rel:"noopener noreferrer"},R=(0,e.Uk)("vuepress2 공식 가이드의 Installation"),$=(0,e.Uk)("를 따라서 파일 생성"),A=(0,e.Wm)("ol",{start:"2"},[(0,e.Wm)("li",null,"정상적으로 생성 완료")],-1),S=(0,e.Wm)("ol",{start:"3"},[(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"build"),(0,e.Uk)("등을 통해 컴파일 및 렌더링 결과, 텍스트 깨짐")])],-1),X=(0,e.uE)('<h3 id="원인-2"><a class="header-anchor" href="#원인-2">#</a> 원인</h3><p><code>echo</code> 명령이 원인이에요.<br> cmd나 파워쉘과 같은 윈도우 cli의 텍스트 인코딩 방식과 웹 표준이 다르다는 문제죠.</p><ul><li>윈도우 표준: <strong>utf-16</strong></li><li>웹 표준: <strong>utf-8</strong></li></ul><p>즉, 윈도우는 <code>echo</code> 명령을 내리면 utf-16으로 인코딩 된 텍스트를 파일에 넣어줍니다.<br> 뷰프레스 프레임워크는 이 텍스트를 웹 표준인 utf-8로 인코딩해서 <code>.html</code> 파일을 만들기 때문에, 텍스트가 깨지는 것이죠.</p><h3 id="해결-2"><a class="header-anchor" href="#해결-2">#</a> 해결</h3><p>VScode를 쓰시나요? 거기서 파일을 만들면 해결돼요.</p><details class="custom-container details"><summary>웹 페이지 인코딩 방식을 바꾸는 크롬 플러그인을 설치해도 소용 없어요.</summary><p>구글에 검색하니 인코딩이 달라서 텍스트가 깨지는 거니, 인코딩 방식을 다르게 해서 읽어내는 플러그인을 사용해보라고 하더라구요. 하지만 이 문제는, 애초에 파워쉘이 utf-16으로 인코딩된 파일을 줘서, 웹팩이 컴파일하면서 텍스트가 깨진거에요. <code>build</code> 후에 <code>/docs/.vuepress/dist/</code>에 들어가서 확인해보세요. 아예 .html 파일 내용이 깨진 텍스트로 구성되어 있을거에요.</p><p>즉, 텍스트 깨짐은 프레임워크 단계, <code>dev</code>나 <code>build</code>과정에서 발생하는 것이지, 브라우저가 파일을 잘못 읽는 게 아니랍니다.</p></details><h2 id="cannot-create-property-probs-on-string-xxx"><a class="header-anchor" href="#cannot-create-property-probs-on-string-xxx">#</a> Cannot create property &#39;__probs&#39; on string &#39;XXX&#39;</h2><p>정말 짜증나는 오류에요. <strong>빌드 과정에서 이 문구를 만나고 해결이 금방 된 적이 없어요.</strong><br> 주로 <em>렌더링 오류</em> 이며, 특정 <em>태그</em> 를 뷰프레스가 렌더링하지 못해 발생하는 오류일 확률이 커요.</p><h3 id="cannot-create-property-probs-on-string-u"><a class="header-anchor" href="#cannot-create-property-probs-on-string-u">#</a> Cannot create property &#39;__probs&#39; on string &#39;U&#39;</h3>',10),G=(0,e.Uk)("밑 '참고' 문단에 넣은 예시이기도 해요. "),I=(0,e.Uk)("블로그 사전준비 문서"),H=(0,e.Uk)("에서 발생한 렌더링 오류에요."),M=(0,e.Uk)("오류 메시지: "),N=(0,e.Wm)("h3",{id:"원인-3"},[(0,e.Wm)("a",{class:"header-anchor",href:"#원인-3"},"#"),(0,e.Uk)(" 원인")],-1),O=(0,e.Uk)("해당 문서"),F=(0,e.Uk)("의 "),L=(0,e.Uk)("6번째 문단 '준비물 3. clone it'"),K=(0,e.Uk)("에서 Code 버튼 왼쪽에 있는 아래 방향 화살표를 재현하고자 "),D=(0,e.Wm)("code",null,"<u>↓</u>",-1),V=(0,e.Uk)(" 를 페이지에 삽입했어요."),Y=(0,e.uE)('<blockquote><p><code>&lt;u&gt;</code>태그는 해당 태그로 감싸진 텍스트에 밑줄을 치는 효과를 줘요.</p></blockquote><p>하지만 이 <code>&lt;u&gt;</code>태그를 뷰프레스 프레임워크는 어떻게 렌더링해야할 지 몰라 발생된 오류에요.</p><h3 id="해결-3"><a class="header-anchor" href="#해결-3">#</a> 해결</h3><p>꼭 뷰프레스가 아니더라도 권장되지 않는 <code>&lt;u&gt;</code>태그를 지웠어요.</p><h3 id="cannot-create-property-probs-on-string-math"><a class="header-anchor" href="#cannot-create-property-probs-on-string-math">#</a> Cannot create property &#39;__probs&#39; on string &#39;math&#39;</h3><p><code>/논테크/수능/수학/</code> 카테고리에 해당하는 문서에 수식을 쓰고자 다양한 플러그인들을 시도하다가 발생한 오류에요. 이 오류가 발생될 당시 플러그인은 &#39;KaTeX&#39;로 정했었어요.</p>',6),z=(0,e.Uk)("오류 메시지:"),J=(0,e.Wm)("br",null,null,-1),Q=(0,e.uE)('<h3 id="원인-4"><a class="header-anchor" href="#원인-4">#</a> 원인</h3><p>KaTeX 플러그인은 마크다운에서 TeX 문법으로 작성된 텍스트를 알맞은 수식으로 빠르게 변환시켜요.</p><p><code>config.ts</code>의 수정으로 마크다운 파일을 KaTeX가 먼저 렌더링하는데, 여기서 <code>&lt;math&gt;</code>태그가 생성돼요. 뷰프레스 프레임웤은 이걸 렌더링하지 못하기 때문에 에러가 나구요.</p><h3 id="해결-4"><a class="header-anchor" href="#해결-4">#</a> 해결</h3><p>config.ts 에서 마크다운의 렌더링 함수를 다시 설정했어요.<br> 첫 시도는 오류를 내는 <code>&lt;math&gt;</code>의 상위항목인 <code>&lt;span class=&quot;katex-mathml&quot;&gt;</code>를 날려버리는 거였어요</p><blockquote><p>(당연히 <code>&lt;span&gt;</code>부터 <code>&lt;/span&gt;</code>까지 전부요.</p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token operator">...</span>\n   <span class="token function-variable function">extendsMarkdown</span><span class="token operator">:</span> <span class="token punctuation">(</span>md<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">let</span> katex <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;markdown-it-katex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">let</span> orignalRender <span class="token operator">=</span> md<span class="token punctuation">.</span>render<span class="token punctuation">;</span>\n      md<span class="token punctuation">.</span><span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> env<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n         <span class="token keyword">let</span> sub <span class="token operator">=</span> <span class="token function">orignalRender</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> env<span class="token punctuation">)</span><span class="token punctuation">;</span>\n         <span class="token keyword">return</span> sub<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;[\\s|\\S]*&lt;\\/math&gt;&lt;\\/span&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&#39;&lt;p&gt;에러에요!&lt;/p&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n\n      md<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>katex<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;throwOnError&quot;</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">&quot;errorColor&quot;</span> <span class="token operator">:</span> <span class="token string">&quot; #cc0000&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token operator">...</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><strong>하지만</strong>, 이 방법으로는 해결되지 않았어요.</p><p>오히려 <code>&lt;span&gt;</code> 태그의 쌍이 안 맞으면서 <strong>Invalid endtag</strong> 오류를 계속 뿜어댔죠. 코드 자체는 &#39;틀렸다&#39;고 볼 만한 곳이 없어, 파서 문제라고 생각하고 있어요.</p>',9),Z=(0,e.Uk)("그래서 "),ss={href:"https://github.com/vuejs/vitepress/issues/229",target:"_blank",rel:"noopener noreferrer"},ns=(0,e.Uk)("관련된 이슈"),as=(0,e.Uk)("에서 찾은 "),es={href:"https://github.com/Maorey/Blog/blob/ac5ced6deb3bbec689c672ec425640a0fba598f3/docs/.vitepress/config.js#L77",target:"_blank",rel:"noopener noreferrer"},ts=(0,e.Uk)("동일한 문제를 해결한 걸로 보이는 블로그의 코드"),ls=(0,e.Uk)("에서 영감을 받아 이렇게 수정했어요:"),ps=(0,e.uE)('<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token operator">...</span>\n   <span class="token function-variable function">extendsMarkdown</span><span class="token operator">:</span> <span class="token punctuation">(</span>md<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">let</span> katex <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;markdown-it-katex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n       \n      <span class="token keyword">let</span> orignalRender <span class="token operator">=</span> md<span class="token punctuation">.</span>render<span class="token punctuation">;</span>\n      <span class="token keyword">let</span> <span class="token constant">MATH_TAG</span> <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;span class=&quot;katex&quot;&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>\n      <span class="token keyword">let</span> <span class="token constant">REPLACER</span> <span class="token operator">=</span> <span class="token string">&#39;&lt;span v-pre class=&quot;katex&quot;&gt;&#39;</span>\n      md<span class="token punctuation">.</span><span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> env<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n         <span class="token keyword">let</span> sub <span class="token operator">=</span> <span class="token function">orignalRender</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> env<span class="token punctuation">)</span><span class="token punctuation">;</span>\n         <span class="token keyword">return</span> sub<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token constant">MATH_TAG</span><span class="token punctuation">,</span> <span class="token constant">REPLACER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n\n      md<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>katex<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;throwOnError&quot;</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">&quot;errorColor&quot;</span> <span class="token operator">:</span> <span class="token string">&quot; #cc0000&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token operator">...</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>이번에는 문제가 되는 span 클래스를 없애는 것이 아니라 <code>span</code>에 <code>v-pre</code>를 추가했어요. 이 v-pre는...</p>',2),os={class:"custom-container theorem"},cs=(0,e.Wm)("p",{class:"custom-container-title"},"'v-pre'는 뷰프레스에 쓰는 directive 에요.",-1),rs=(0,e.Wm)("p",null,"이 디렉티브는 특정 엘리먼트를 무시하는데에 사용 됩니다. 이걸 사용하므로서, Vue 시스템에서 해당 엘리먼트는 지시문이 없다는걸 인식하게 되어 그 엘리먼트 내부의 자식엘리먼트들을 신경쓰지 않고 그냥 건너뜁니다.",-1),is={class:"custom-container right"},us=(0,e.Uk)("from. "),ds={href:"https://velopert.com/3044",target:"_blank",rel:"noopener noreferrer"},ms=(0,e.Uk)("velopert.com/3044"),ks=(0,e.Wm)("p",null,[(0,e.Uk)("따라서, 문제가 되는 "),(0,e.Wm)("code",null,"<math>"),(0,e.Uk)("를 포함한 "),(0,e.Wm)("code",null,'<span class="katex">'),(0,e.Uk)("를 뷰프레스가 무시하게 되어서, 아무런 오류가 발생하지 않게 돼요.")],-1),bs=(0,e.Wm)("h3",{id:"참고"},[(0,e.Wm)("a",{class:"header-anchor",href:"#참고"},"#"),(0,e.Uk)(" 참고")],-1),gs=(0,e.Wm)("p",null,"렌더링 문제일 경우, '어떤 문서'에서 오류가 발생했는지를 보는 게 꽤 의미있어요. 방법은 간단해요:",-1),hs=(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"yarn build")],-1),vs=(0,e.Uk)("build log 확인 "),fs=(0,e.Wm)("li",null,"build fail 메세지 바로 윗 줄 문서가 오류를 내는 문서임.",-1),Ws=(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"dev"),(0,e.Uk)(" 모드에서 해당 페이지 접근")],-1),ys=(0,e.Wm)("li",null,"콘솔 창(F12) 오픈",-1),xs=(0,e.Wm)("li",null,"오류 발생 여부 확인",-1),Us={render:function(s,n){const a=(0,e.up)("OutboundLink"),Us=(0,e.up)("CodeGroupItem"),ws=(0,e.up)("CodeGroup"),_s=(0,e.up)("RouterLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[t,(0,e.Wm)("p",null,[l,(0,e.Wm)("a",p,[o,(0,e.Wm)(a)]),c]),r,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[i,u,(0,e.Wm)("img",{src:s.$withBase("images/vuepress/ps_001.png"),alt:"restricted"},null,8,["src"])])]),d,(0,e.Wm)("details",m,[k,(0,e.Wm)("img",{src:s.$withBase("images/vuepress/ps_002.png"),alt:"settingPs"},null,8,["src"])]),b,(0,e.Wm)("details",g,[h,(0,e.Wm)("img",{src:s.$withBase("images/vuepress/ps_003.png"),alt:"compleps"},null,8,["src"])]),v,(0,e.Wm)("blockquote",null,[(0,e.Wm)("p",null,[f,(0,e.Wm)("a",W,[y,(0,e.Wm)(a)]),x,U,w])]),_,q,(0,e.Wm)("img",{src:s.$withBase("images/vuepress/onlyThreeRectangle.png"),alt:"rayoutCrashed"},null,8,["src"]),E,T,(0,e.Wm)(ws,null,{default:(0,e.w5)((()=>[(0,e.Wm)(Us,{title:"베이스 O"},{default:(0,e.w5)((()=>[C])),_:1}),(0,e.Wm)(Us,{title:"베이스 X"},{default:(0,e.w5)((()=>[j])),_:1})])),_:1}),B,(0,e.Wm)("ol",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",P,[R,(0,e.Wm)(a)]),$])]),(0,e.Wm)("img",{src:s.$withBase("images/vuepress/encoding-err-00.png"),style:{width:"500px"}},null,8,["src"]),A,(0,e.Wm)("img",{src:s.$withBase("images/vuepress/encoding-err-01.png")},null,8,["src"]),S,(0,e.Wm)("img",{src:s.$withBase("images/vuepress/encoding-err-02.png")},null,8,["src"]),X,(0,e.Wm)("p",null,[G,(0,e.Wm)(_s,{to:"/tech/blog/vuepress/ready_for_blog.html"},{default:(0,e.w5)((()=>[I])),_:1}),H]),(0,e.Wm)("p",null,[M,(0,e.Wm)("img",{src:s.$withBase("images/vuepress/cannot-01.PNG")},null,8,["src"])]),N,(0,e.Wm)("p",null,[(0,e.Wm)(_s,{to:"/tech/blog/vuepress/ready_for_blog.html"},{default:(0,e.w5)((()=>[O])),_:1}),F,(0,e.Wm)(_s,{to:"/tech/blog/vuepress/ready_for_blog.html#%E1%84%8C%E1%85%AE%E1%86%AB%E1%84%87%E1%85%B5%E1%84%86%E1%85%AE%E1%86%AF-3-clone-it"},{default:(0,e.w5)((()=>[L])),_:1}),K,D,V]),Y,(0,e.Wm)("p",null,[z,J,(0,e.Wm)("img",{src:s.$withBase("images/vuepress/cannot-02.PNG")},null,8,["src"])]),Q,(0,e.Wm)("p",null,[Z,(0,e.Wm)("a",ss,[ns,(0,e.Wm)(a)]),as,(0,e.Wm)("a",es,[ts,(0,e.Wm)(a)]),ls]),ps,(0,e.Wm)("div",os,[cs,rs,(0,e.Wm)("div",is,[(0,e.Wm)("p",null,[(0,e.Wm)("em",null,[us,(0,e.Wm)("a",ds,[ms,(0,e.Wm)(a)])])])])]),ks,bs,gs,(0,e.Wm)("ul",null,[hs,(0,e.Wm)("li",null,[vs,(0,e.Wm)("img",{src:s.$withBase("images/vuepress/cannot-03.PNG")},null,8,["src"])]),fs,Ws,ys,xs])],64)}}}}]);